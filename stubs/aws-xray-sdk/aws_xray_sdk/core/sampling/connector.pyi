from _typeshed import Incomplete

from ..context import Context

class ServiceConnector:
    def __init__(self) -> None: ...
    def fetch_sampling_rules(self): ...
    def fetch_sampling_target(self, rules): ...
    def setup_xray_client(self, ip: str, port: str, client: Incomplete | None) -> None: ...
    @property
    def context(self) -> Context: ...
    @context.setter
    def context(self, v: Context) -> None: ...
    def _generate_reporting_docs(self, rules, now): ...
    def _dt_to_epoch(self, dt) -> int: ...
    def _is_rule_valid(self, record) -> bool: ...
    def _create_xray_client(self, ip: str = "127.0.0.1", port: str = "2000"): ...
